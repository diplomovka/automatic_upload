import argparse
import os
import sys
import uuid
from base64 import b64encode

parser = argparse.ArgumentParser()
parser.add_argument('--folder', '-f', required=True, help='relative path to folder, where will be generated data stored')
parser.add_argument('--rounds', '-r', required=True, type=int, help='number of rounds, which will generate files')
parser.add_argument('--size', '-s', required=True, type=int, help='size of each file, which will be generated by simulator')

args = parser.parse_args()
folder_relative_path = args.folder
rounds = args.rounds
size = args.size

if not os.path.exists(folder_relative_path):
    os.makedirs(folder_relative_path)
elif not os.path.isdir(folder_relative_path):
    print('provided path to folder isn\'t a directory')
    sys.exit(-1)

for i in range(rounds):
    file_name = f'{uuid.uuid4()}.txt'
    # generate random bytes
    generated_data = b64encode(os.urandom(size)).decode('utf-8')

    with open(f'{folder_relative_path}/{file_name}', 'w') as file:
        file.write(generated_data)